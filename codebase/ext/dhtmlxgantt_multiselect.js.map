{"version":3,"sources":["webpack:///dhtmlxgantt_multiselect.js","webpack:///webpack/bootstrap 4a949578cbbb066f713d","webpack:///./sources/ext/multiselect.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","19","20","gantt","config","multiselect","multiselect_one_level","_multiselect","selected","one_level","active","_first_selected_when_shift","isActive","this","update_state","reset","set_last_selected","id","last_selected","getLastSelected","last","isTaskExists","select","e","callEvent","toggle","unselect","isSelected","getSelected","res","push","sort","a","b","calculateTaskLevel","getTask","forSelected","callback","length","is_same_level","_after_select","target","refreshTask","_do_selection","target_ev","locate","shiftKey","ctrlKey","metaKey","first_indx","getGlobalTaskIndex","target_indx","last_indx","tmp","getNext","getPrev","old_selectTask","selectTask","old_unselectTask","unselectTask","undefined","toggleTaskSelection","getSelectedTasks","eachSelectedTask","isSelectedTask","getLastSelectedTask","attachEvent","new_id","item","task_id"],"mappings":"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","file":"dhtmlxgantt_multiselect.js","sourcesContent":["/*!\n * @license\n * \n * dhtmlxGantt v.5.0.5 Stardard\n * This software is covered by GPL license. You also can obtain Commercial or Enterprise license to use it in non-GPL project - please contact sales@dhtmlx.com. Usage without proper license is prohibited.\n * \n * (c) Dinamenta, UAB.\n * \n */\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 19);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 19:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(20);\n\n\n/***/ }),\n\n/***/ 20:\n/***/ (function(module, exports) {\n\ngantt.config.multiselect = true;\ngantt.config.multiselect_one_level = false;\n\ngantt._multiselect = {\n\tselected: {},\n\tone_level: true,\n\tactive: true,\n\t_first_selected_when_shift: null,\n\tisActive: function(){\n\t\tthis.update_state();\n\t\treturn this.active;\n\t},\n\tupdate_state: function(){\n\t\tthis.one_level = gantt.config.multiselect_one_level;\n\t\tvar active = this.active;\n\t\tthis.active = gantt.config.multiselect;\n\t\tif(this.active != active){\n\t\t\tthis.reset();\n\t\t}\n\t},\n\treset: function () {\n\t\tthis.selected = {};\n\t},\n\tset_last_selected: function (id) {\n\t\tthis.last_selected = id;\n\t},\n\tgetLastSelected: function () {\n\t\tvar last = this.last_selected;\n\t\tif(last && gantt.isTaskExists(last))\n\t\t\treturn last;\n\t\treturn null;\n\t},\n\tselect: function (id, e) {\n\t\tif(gantt.callEvent(\"onBeforeTaskMultiSelect\", [id, true, e])){\n\t\t\tthis.selected[id] = true;\n\t\t\tthis.set_last_selected(id);\n\t\t\tgantt.callEvent(\"onTaskMultiSelect\", [id, true, e]);\n\t\t}\n\t},\n\ttoggle: function (id, e) {\n\t\tif(this.selected[id]){\n\t\t\tthis.unselect(id, e);\n\t\t}else{\n\t\t\tthis.select(id, e);\n\t\t}\n\t},\n\tunselect: function (id, e) {\n\t\tif(gantt.callEvent(\"onBeforeTaskMultiSelect\", [id, false, e])){\n\t\t\tthis.selected[id] = false;\n\t\t\tif(this.last_selected == id)\n\t\t\t \tthis.last_selected = null;\n\t\t\tgantt.callEvent(\"onTaskMultiSelect\", [id, false, e]);\n\t\t}\n\t},\n\tisSelected: function (id) {\n\t\treturn !!(gantt.isTaskExists(id) && this.selected[id]);\n\t},\n\tgetSelected: function () {\n\t\tvar res = [];\n\t\tfor (var i in this.selected) {\n\t\t\tif (this.selected[i] && gantt.isTaskExists(i)) {\n\t\t\t\tres.push(i);\n\t\t\t}else{\n\t\t\t\tthis.selected[i] = false;\n\t\t\t}\n\t\t}\n\n\t\tres.sort(function(a, b){\n\t\t\treturn gantt.calculateTaskLevel(gantt.getTask(a)) > gantt.calculateTaskLevel(gantt.getTask(b)) ? 1 : -1;\n\t\t});\n\t\t\n\t\treturn res;\n\t},\n\tforSelected: function (callback) {\n\t\tvar selected = this.getSelected();\n\t\tfor (var i = 0; i < selected.length; i++) {\n\t\t\tcallback(selected[i]);\n\t\t}\n\t},\n\tis_same_level: function(id){\n\t\tif(!this.one_level)\n\t\t\treturn true;\n\t\tvar last = this.getLastSelected();\n\t\tif(!last)\n\t\t\treturn true;\n\n\t\tif(!(gantt.isTaskExists(last) && gantt.isTaskExists(id)))\n\t\t\treturn true;\n\n\t\treturn !!(gantt.calculateTaskLevel(gantt.getTask(last)) == gantt.calculateTaskLevel(gantt.getTask(id)));\n\t},\n\t_after_select: function(target){\n\t\tgantt.refreshTask(target);\n\t},\n\t_do_selection: function(e) {\n\t\t/* add onclick handler to gantt container, hook up multiselection */\n\t\tif(!this.isActive())\n\t\t\treturn true;\n\t\tif(!gantt.callEvent(\"onBeforeMultiSelect\", [e]))\n\t\t\treturn true;\n\n\t\tvar target_ev = gantt.locate(e);\n\t\tif (!target_ev)\n\t\t\treturn true;\n\n\t\tvar last = this.getLastSelected();\n\t\tvar selected = this.getSelected();\n\n\t\tif (e.shiftKey) {\n\t\t\tif (!gantt.isTaskExists(this._first_selected_when_shift) || this._first_selected_when_shift === null) {\n\t\t\t\tthis._first_selected_when_shift = target_ev;\n\t\t\t}\n\t\t} else if (e.ctrlKey || e.metaKey) {\n\t\t\tif (!this.isSelected(target_ev)) // if the task was selected - it becames unselected now, so _first_selected shouldn't point to it\n\t\t\t\tthis._first_selected_when_shift = target_ev;\n\t\t} else {\n\t\t\tthis._first_selected_when_shift = target_ev;\n\t\t}\n\t\t\n\t\tif (e.ctrlKey || e.metaKey) {\n\t\t\tif (target_ev && (target_ev !== this._first_selected_when_shift || !this.isSelected(this._first_selected_when_shift))) { // cannot trigger _first_selected task\n\t\t\t\tthis.toggle(target_ev, e);\n\t\t\t\tthis._after_select(target_ev);\n\t\t\t}\n\t\t} else if (e.shiftKey && selected.length) {\t\t\t\n\t\t\tif (!last)\n\t\t\t \tlast = target_ev;\t\t\t\n\t\t\tif (target_ev) {\n\t\t\t\tvar first_indx = gantt.getGlobalTaskIndex(this._first_selected_when_shift);\n\t\t\t\tvar target_indx = gantt.getGlobalTaskIndex(target_ev);\n\t\t\t\tvar last_indx = gantt.getGlobalTaskIndex(last);\t\t\t\n\t\t\t\t\n\t\t\t\t// clear prev selection\n\t\t\t\tvar tmp = last;\n\t\t\t\twhile (gantt.getGlobalTaskIndex(tmp) != first_indx) {\n\t\t\t\t\tthis.unselect(tmp);\n\t\t\t\t\tthis._after_select(tmp);\n\t\t\t\t\ttmp = (first_indx > last_indx) ? gantt.getNext(tmp) : gantt.getPrev(tmp);\n\t\t\t\t}\n\t\t\t\ttmp = target_ev;\n\t\t\t\twhile (gantt.getGlobalTaskIndex(tmp) != first_indx) {\n\t\t\t\t\tthis.select(tmp); \n\t\t\t\t\tthis._after_select(tmp);\n\t\t\t\t\ttmp = (first_indx > target_indx) ? gantt.getNext(tmp) : gantt.getPrev(tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t} else { // no key press when mouse click\n\t\t\tif (!this.isSelected(target_ev)) {\n\t\t\t\tthis.select(target_ev);\n\t\t\t\tthis._after_select(target_ev);\n\t\t\t}\n\t\t\tfor (var i=0; i<selected.length; i++) {\n\t\t\t\tif (selected[i] !== target_ev) {\n\t\t\t\t\tthis.unselect(selected[i]);\n\t\t\t\t\tthis._after_select(selected[i]);\n\t\t\t\t}\t\n\t\t\t}\n\t\t}\n\t\tif(!this.isSelected(target_ev)){\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n};\n\n\n(function(){\n\tvar old_selectTask = gantt.selectTask;\n\tgantt.selectTask = function(id){\n\t\tvar res = old_selectTask.call(this, id);\n\t\tif(this.config.multiselect)\n\t\t\tthis._multiselect.select(id);\n\n\t\treturn res;\n\t};\n\tvar old_unselectTask = gantt.unselectTask;\n\tgantt.unselectTask = function(id){\n\t\tif(id !== undefined && this.config.multiselect)\n\t\t\tthis._multiselect.unselect(id);\n\t\tvar res = old_unselectTask.call(this, id);\n\t\treturn res;\n\t};\n\n\tgantt.toggleTaskSelection = function(id){\n\t\tif(this.config.multiselect)\n\t\t\tthis._multiselect.toggle(id);\n\t};\n\tgantt.getSelectedTasks = function(){\n\t\treturn this._multiselect.getSelected();\n\t};\n\tgantt.eachSelectedTask = function(callback){\n\t\treturn this._multiselect.forSelected(callback);\n\t};\n\tgantt.isSelectedTask = function(id){\n\t\treturn this._multiselect.isSelected(id);\n\t};\n\tgantt.getLastSelectedTask = function(){\n\t\treturn this._multiselect.getLastSelected();\n\t};\n\n})();\n\ngantt.attachEvent(\"onTaskIdChange\", function (id, new_id) {\n\tvar multiselect = gantt._multiselect;\n\tif(!multiselect.isActive())\n\t\treturn true;\n\n\tif (gantt.isSelectedTask(id)) {\n\t\tmultiselect.unselect(id, null);\n\t\tmultiselect.select(new_id, null);\n\t\tgantt.refreshTask(new_id);\n\t}\n});\n\ngantt.attachEvent(\"onAfterTaskDelete\", function (id, item) {\n\tvar multiselect = gantt._multiselect;\n\tif(!multiselect.isActive())\n\t\treturn true;\n\n\tif (multiselect.selected[id])\n\t\tmultiselect.unselect(id, null);\n\n\tmultiselect.forSelected(function (task_id) {\n\t\tif (!gantt.isTaskExists(task_id))\n\t\t\tmultiselect.unselect(task_id, null);\n\t});\n});\n\ngantt.attachEvent(\"onBeforeTaskMultiSelect\", function(id, select, e){\n\tvar multiselect = gantt._multiselect;\n\tif(select && multiselect.isActive()){\n\t\treturn multiselect.is_same_level(id);\n\t}\n\treturn true;\n});\n\ngantt.attachEvent(\"onTaskClick\", function(id, e){\n\tvar res = gantt._multiselect._do_selection(e);\n\tgantt.callEvent(\"onMultiSelect\", [e]);\n\treturn res;\n});\n\ngantt.attachEvent(\"onEmptyClick\", function (e){\n\tgantt._multiselect._do_selection(e);\n\tgantt.callEvent(\"onMultiSelect\", [e]);\n\treturn true;\n});\n\n/***/ })\n\n/******/ });\n\n\n// WEBPACK FOOTER //\n// dhtmlxgantt_multiselect.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 19);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4a949578cbbb066f713d","gantt.config.multiselect = true;\ngantt.config.multiselect_one_level = false;\n\ngantt._multiselect = {\n\tselected: {},\n\tone_level: true,\n\tactive: true,\n\t_first_selected_when_shift: null,\n\tisActive: function(){\n\t\tthis.update_state();\n\t\treturn this.active;\n\t},\n\tupdate_state: function(){\n\t\tthis.one_level = gantt.config.multiselect_one_level;\n\t\tvar active = this.active;\n\t\tthis.active = gantt.config.multiselect;\n\t\tif(this.active != active){\n\t\t\tthis.reset();\n\t\t}\n\t},\n\treset: function () {\n\t\tthis.selected = {};\n\t},\n\tset_last_selected: function (id) {\n\t\tthis.last_selected = id;\n\t},\n\tgetLastSelected: function () {\n\t\tvar last = this.last_selected;\n\t\tif(last && gantt.isTaskExists(last))\n\t\t\treturn last;\n\t\treturn null;\n\t},\n\tselect: function (id, e) {\n\t\tif(gantt.callEvent(\"onBeforeTaskMultiSelect\", [id, true, e])){\n\t\t\tthis.selected[id] = true;\n\t\t\tthis.set_last_selected(id);\n\t\t\tgantt.callEvent(\"onTaskMultiSelect\", [id, true, e]);\n\t\t}\n\t},\n\ttoggle: function (id, e) {\n\t\tif(this.selected[id]){\n\t\t\tthis.unselect(id, e);\n\t\t}else{\n\t\t\tthis.select(id, e);\n\t\t}\n\t},\n\tunselect: function (id, e) {\n\t\tif(gantt.callEvent(\"onBeforeTaskMultiSelect\", [id, false, e])){\n\t\t\tthis.selected[id] = false;\n\t\t\tif(this.last_selected == id)\n\t\t\t \tthis.last_selected = null;\n\t\t\tgantt.callEvent(\"onTaskMultiSelect\", [id, false, e]);\n\t\t}\n\t},\n\tisSelected: function (id) {\n\t\treturn !!(gantt.isTaskExists(id) && this.selected[id]);\n\t},\n\tgetSelected: function () {\n\t\tvar res = [];\n\t\tfor (var i in this.selected) {\n\t\t\tif (this.selected[i] && gantt.isTaskExists(i)) {\n\t\t\t\tres.push(i);\n\t\t\t}else{\n\t\t\t\tthis.selected[i] = false;\n\t\t\t}\n\t\t}\n\n\t\tres.sort(function(a, b){\n\t\t\treturn gantt.calculateTaskLevel(gantt.getTask(a)) > gantt.calculateTaskLevel(gantt.getTask(b)) ? 1 : -1;\n\t\t});\n\t\t\n\t\treturn res;\n\t},\n\tforSelected: function (callback) {\n\t\tvar selected = this.getSelected();\n\t\tfor (var i = 0; i < selected.length; i++) {\n\t\t\tcallback(selected[i]);\n\t\t}\n\t},\n\tis_same_level: function(id){\n\t\tif(!this.one_level)\n\t\t\treturn true;\n\t\tvar last = this.getLastSelected();\n\t\tif(!last)\n\t\t\treturn true;\n\n\t\tif(!(gantt.isTaskExists(last) && gantt.isTaskExists(id)))\n\t\t\treturn true;\n\n\t\treturn !!(gantt.calculateTaskLevel(gantt.getTask(last)) == gantt.calculateTaskLevel(gantt.getTask(id)));\n\t},\n\t_after_select: function(target){\n\t\tgantt.refreshTask(target);\n\t},\n\t_do_selection: function(e) {\n\t\t/* add onclick handler to gantt container, hook up multiselection */\n\t\tif(!this.isActive())\n\t\t\treturn true;\n\t\tif(!gantt.callEvent(\"onBeforeMultiSelect\", [e]))\n\t\t\treturn true;\n\n\t\tvar target_ev = gantt.locate(e);\n\t\tif (!target_ev)\n\t\t\treturn true;\n\n\t\tvar last = this.getLastSelected();\n\t\tvar selected = this.getSelected();\n\n\t\tif (e.shiftKey) {\n\t\t\tif (!gantt.isTaskExists(this._first_selected_when_shift) || this._first_selected_when_shift === null) {\n\t\t\t\tthis._first_selected_when_shift = target_ev;\n\t\t\t}\n\t\t} else if (e.ctrlKey || e.metaKey) {\n\t\t\tif (!this.isSelected(target_ev)) // if the task was selected - it becames unselected now, so _first_selected shouldn't point to it\n\t\t\t\tthis._first_selected_when_shift = target_ev;\n\t\t} else {\n\t\t\tthis._first_selected_when_shift = target_ev;\n\t\t}\n\t\t\n\t\tif (e.ctrlKey || e.metaKey) {\n\t\t\tif (target_ev && (target_ev !== this._first_selected_when_shift || !this.isSelected(this._first_selected_when_shift))) { // cannot trigger _first_selected task\n\t\t\t\tthis.toggle(target_ev, e);\n\t\t\t\tthis._after_select(target_ev);\n\t\t\t}\n\t\t} else if (e.shiftKey && selected.length) {\t\t\t\n\t\t\tif (!last)\n\t\t\t \tlast = target_ev;\t\t\t\n\t\t\tif (target_ev) {\n\t\t\t\tvar first_indx = gantt.getGlobalTaskIndex(this._first_selected_when_shift);\n\t\t\t\tvar target_indx = gantt.getGlobalTaskIndex(target_ev);\n\t\t\t\tvar last_indx = gantt.getGlobalTaskIndex(last);\t\t\t\n\t\t\t\t\n\t\t\t\t// clear prev selection\n\t\t\t\tvar tmp = last;\n\t\t\t\twhile (gantt.getGlobalTaskIndex(tmp) != first_indx) {\n\t\t\t\t\tthis.unselect(tmp);\n\t\t\t\t\tthis._after_select(tmp);\n\t\t\t\t\ttmp = (first_indx > last_indx) ? gantt.getNext(tmp) : gantt.getPrev(tmp);\n\t\t\t\t}\n\t\t\t\ttmp = target_ev;\n\t\t\t\twhile (gantt.getGlobalTaskIndex(tmp) != first_indx) {\n\t\t\t\t\tthis.select(tmp); \n\t\t\t\t\tthis._after_select(tmp);\n\t\t\t\t\ttmp = (first_indx > target_indx) ? gantt.getNext(tmp) : gantt.getPrev(tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t} else { // no key press when mouse click\n\t\t\tif (!this.isSelected(target_ev)) {\n\t\t\t\tthis.select(target_ev);\n\t\t\t\tthis._after_select(target_ev);\n\t\t\t}\n\t\t\tfor (var i=0; i<selected.length; i++) {\n\t\t\t\tif (selected[i] !== target_ev) {\n\t\t\t\t\tthis.unselect(selected[i]);\n\t\t\t\t\tthis._after_select(selected[i]);\n\t\t\t\t}\t\n\t\t\t}\n\t\t}\n\t\tif(!this.isSelected(target_ev)){\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n};\n\n\n(function(){\n\tvar old_selectTask = gantt.selectTask;\n\tgantt.selectTask = function(id){\n\t\tvar res = old_selectTask.call(this, id);\n\t\tif(this.config.multiselect)\n\t\t\tthis._multiselect.select(id);\n\n\t\treturn res;\n\t};\n\tvar old_unselectTask = gantt.unselectTask;\n\tgantt.unselectTask = function(id){\n\t\tif(id !== undefined && this.config.multiselect)\n\t\t\tthis._multiselect.unselect(id);\n\t\tvar res = old_unselectTask.call(this, id);\n\t\treturn res;\n\t};\n\n\tgantt.toggleTaskSelection = function(id){\n\t\tif(this.config.multiselect)\n\t\t\tthis._multiselect.toggle(id);\n\t};\n\tgantt.getSelectedTasks = function(){\n\t\treturn this._multiselect.getSelected();\n\t};\n\tgantt.eachSelectedTask = function(callback){\n\t\treturn this._multiselect.forSelected(callback);\n\t};\n\tgantt.isSelectedTask = function(id){\n\t\treturn this._multiselect.isSelected(id);\n\t};\n\tgantt.getLastSelectedTask = function(){\n\t\treturn this._multiselect.getLastSelected();\n\t};\n\n})();\n\ngantt.attachEvent(\"onTaskIdChange\", function (id, new_id) {\n\tvar multiselect = gantt._multiselect;\n\tif(!multiselect.isActive())\n\t\treturn true;\n\n\tif (gantt.isSelectedTask(id)) {\n\t\tmultiselect.unselect(id, null);\n\t\tmultiselect.select(new_id, null);\n\t\tgantt.refreshTask(new_id);\n\t}\n});\n\ngantt.attachEvent(\"onAfterTaskDelete\", function (id, item) {\n\tvar multiselect = gantt._multiselect;\n\tif(!multiselect.isActive())\n\t\treturn true;\n\n\tif (multiselect.selected[id])\n\t\tmultiselect.unselect(id, null);\n\n\tmultiselect.forSelected(function (task_id) {\n\t\tif (!gantt.isTaskExists(task_id))\n\t\t\tmultiselect.unselect(task_id, null);\n\t});\n});\n\ngantt.attachEvent(\"onBeforeTaskMultiSelect\", function(id, select, e){\n\tvar multiselect = gantt._multiselect;\n\tif(select && multiselect.isActive()){\n\t\treturn multiselect.is_same_level(id);\n\t}\n\treturn true;\n});\n\ngantt.attachEvent(\"onTaskClick\", function(id, e){\n\tvar res = gantt._multiselect._do_selection(e);\n\tgantt.callEvent(\"onMultiSelect\", [e]);\n\treturn res;\n});\n\ngantt.attachEvent(\"onEmptyClick\", function (e){\n\tgantt._multiselect._do_selection(e);\n\tgantt.callEvent(\"onMultiSelect\", [e]);\n\treturn true;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./sources/ext/multiselect.js\n// module id = 20\n// module chunks = 5"],"sourceRoot":""}